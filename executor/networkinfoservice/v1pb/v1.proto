syntax = "proto3";

import "executor/scriptsservice/v1pb/v1.proto";

package kobun4.executor.networkinfo.v1;

option go_package = "v1pb";

message GetUserInfoRequest {
    kobun4.executor.scripts.v1.Context context = 1;

    string user_id = 2;
}

message GetUserInfoResponse {
    string name = 1;

    map<string, string> extra = 1000;
}

message GetChannelInfoRequest {
    kobun4.executor.scripts.v1.Context context = 1;

    string channel_id = 2;
}

message GetChannelInfoResponse {
    string name = 1;
    bool is_one_on_one = 2;

    map<string, string> extra = 1000;
}

message GetGroupInfoRequest {
    kobun4.executor.scripts.v1.Context context = 1;
}

message GetGroupInfoResponse {
    string name = 1;

    map<string, string> extra = 1000;
}

message GetChannelMemberInfoRequest {
    kobun4.executor.scripts.v1.Context context = 1;

    string channel_id = 2;
    string user_id = 3;
}

message GetChannelMemberInfoResponse {
    string name = 1;
    repeated string role = 2;

    map<string, string> extra = 1000;
}

message GetGroupMemberInfoRequest {
    kobun4.executor.scripts.v1.Context context = 1;

    string user_id = 2;
}

message GetGroupMemberInfoResponse {
    string name = 1;
    repeated string role = 2;

    map<string, string> extra = 1000;
}

service NetworkInfo {
    rpc GetUserInfo(GetUserInfoRequest) returns (GetUserInfoResponse) {}
    rpc GetChannelInfo(GetChannelInfoRequest) returns (GetChannelInfoResponse) {}
    rpc GetGroupInfo(GetGroupInfoRequest) returns (GetGroupInfoResponse) {}

    rpc GetChannelMemberInfo(GetChannelMemberInfoRequest) returns (GetChannelMemberInfoResponse) { }
    rpc GetGroupMemberInfo(GetGroupMemberInfoRequest) returns (GetGroupMemberInfoResponse) { }
}
